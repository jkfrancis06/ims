{% extends 'nav.html.twig' %}

{% block title %}Tableau de bord{% endblock %}


{% block javascripts %}

{% endblock %}

 {% block stylesheets %}
     <link rel="stylesheet" href="{{ asset('/assets/css/fileinput/fileinput.min.css') }}" />
     <link rel="stylesheet" href="{{ asset('/assets/css/fileinput/theme/theme.css') }}" />
     <link rel="stylesheet" href="{{ asset('/assets/css/fileinput/fileinput-rtl.min.css') }}" />


     <style>
         .dt-buttons{
             margin-bottom: 1em!important;
             margin-left: 0.5em!important;
         }
         #tab-content{
             display: none;
         }
         #loader{
             display: block;
         }
         #loading {
             background: url('{{ asset('/assets/img/loader.gif') }}') no-repeat center center;
             position: absolute;
             top: 0;
             left: 0;
             height: 100%;
             width: 100%;
             z-index: 9999999;
         }
         .pagination .page-item .page-link{
             color: white!important;
         }
         .kv-avatar .krajee-default.file-preview-frame,.kv-avatar .krajee-default.file-preview-frame:hover {
             margin: 0;
             padding: 0;
             border: none;
             box-shadow: none;
             text-align: center;
         }
         .kv-avatar {
             display: inline-block;
         }
         .kv-avatar .file-input {
             display: table-cell;
             width: 213px;
         }
         .kv-reqd {
             color: red;
             font-family: monospace;
             font-weight: normal;
         }

         .kv-file-upload{
             display: none;
         }
     </style>
 {% endblock %}


{% block content %}

    {% form_theme envenementForm.attachements 'themes/attachements.html.twig' 'jquery.collection.html.twig' %}




    <div style="margin-top: 1em; ">


            {{ form_start(envenementForm) }}

            <div class="row">

                <div class="col col-8">
                    <div class="text-danger">
                        {{ form_errors(envenementForm) }}
                    </div>
                </div>




                <div class="col col-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.typeEvenement, "Type de l'evenement: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.typeEvenement, {'attr': {'class': 'mdb-select md-form colorful-select dropdown-ins'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.typeEvenement) }}
                        </div>
                    </div>
                </div>

                <div class="col col-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.titre, "Titre de l'evenement: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.titre, {'attr': {'class': 'form-control'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.titre) }}
                        </div>
                    </div>
                </div>

                <div class="col col-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.localisation, "Adresse / Lieu: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.localisation, {'attr': {'class': 'form-control'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.localisation) }}
                        </div>
                    </div>
                </div>



                <div class="col col-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.geoLocalisation, "Coodonnees GPS: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.geoLocalisation, {'attr': {'class': 'form-control'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.geoLocalisation) }}
                        </div>
                    </div>
                </div>



                <div class="col col-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.startAt, "Date de debut: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.startAt, {'attr': {'class': 'form-control'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.startAt) }}
                        </div>
                    </div>
                </div>

                <div class="col col-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.endAt, "Date de fin: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.endAt, {'attr': {'class': 'form-control'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.endAt) }}
                        </div>
                    </div>
                </div>





                <div class="col col-5 mt-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.entite, "Entites impliques: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.entite, {'attr': {'class': 'mdb-select md-form colorful-select dropdown-default'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.entite) }}
                        </div>
                    </div>
                </div>

                <div class="col col-5 mt-5">
                    <div class="mb-3">
                        {{ form_label(envenementForm.utilisateur, "Agents impliques: ", {'label_attr': {'class': 'intitule_label'}}) }}
                        {{ form_widget(envenementForm.utilisateur, {'attr': {'class': 'mdb-select md-form colorful-select dropdown-dark'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.utilisateur) }}
                        </div>
                    </div>
                </div>



                <div class="col col-10 mt-4">
                    <div class="mb-3">
                        {{ form_widget(envenementForm.resume,{'attr': {'class': 'form-control'}}) }}
                        <div class="form-error" style="color: red">
                            {{ form_errors(envenementForm.resume) }}
                        </div>
                    </div>
                </div>


                <div class="col col-10 mt-5 mb-5">
                    <div class="card">
                        <div class="card-body">
                            {{ form_widget(envenementForm.attachements)}}
                        </div>
                    </div>
                </div>

                <div class="col col-12">
                    <div class="row">
                        <div class="col col-2">
                            {{ form_row(envenementForm.cancel,{'attr':{'class': 'btn btn-outline-secondary form-btn'}}) }}
                        </div>
                        <div class="col col-2">
                            {{ form_row(envenementForm.submit,{'attr':{'class': 'btn btn-outline-success form-btn'}}) }}
                        </div>
                    </div>
                </div>

            </div>

            {{ form_end(envenementForm) }}
        </div>





{% endblock %}





    {% block botton_javascripts %}


        <script>


            $(document).ready(function () {
                //parse data of editor in form

                $('.custom-file input').change(function (e) {
                    if (e.target.files.length) {
                        $(this).next('.custom-file-label').html(e.target.files[0].name);
                    }
                });

                $('.attachements').collection({
                    up: '<a href="#">&#x25B2;</a>',
                    down: '<a href="#">&#x25BC;</a>',
                    add: '<a class="btn btn-sm btn-default" href="#">' +
                        '<span class="fa fa-plus-circle"></span> Ajouter une piece jointe</a>',
                    remove: '<a href="#">[ - ]</a>',
                    duplicate: '<a href="#">[ # ]</a>',
                    allow_up: false,
                    allow_down: false,
                    after_add: function(collection, element) {
                        $('.custom-file input').change(function (e) {
                            if (e.target.files.length) {
                                $(this).next('.custom-file-label').html(e.target.files[0].name);
                            }
                        });
                    },
                });



                CKEDITOR.config.allowedContent = true;

                CKEDITOR.config.allowedContent = true;

                CKEDITOR.config.extraAllowedContent = 'span(*)';



                CKEDITOR.plugins.add('entiteinsert',
                    {
                        requires : ['richcombo'],
                        init : function( editor )
                        {
                            var config = editor.config;

                            // Gets the list of insertable strings from the settings.
                            var strings = config.strinsert_strings;



                            // add the menu to the editor
                            editor.ui.addRichCombo('entiteinsert',
                                {
                                    label: 'Entites',
                                    title: 'Entites',
                                    toolbar: 'basicstyles,1',

                                    panel: {
                                        css: [ CKEDITOR.skin.getPath( 'editor' ) ].concat( config.contentsCss ),
                                        multiSelect: false,
                                        attributes: { 'aria-label': 'Entites' }
                                    },

                                    init: function() {

                                        this.startGroup( 'Inserer une entite' );

                                        {% for entite in entites %}

                                        {% if entite.isPersonne() is defined %}

                                        {% if entite.aliases|length > 0 %}

                                        this.add('[[{{ entite.id }}]]', '{{ entite.description }} {{ entite.description2 }} alias {{ entite.aliases[0].alias }}' );

                                        {% else %}

                                        this.add('[[{{ entite.id }}]]', '{{ entite.description }} {{ entite.description2 }}' );

                                        {% endif %}

                                        {% else %}

                                        this.add('[[{{ entite.id }}]]', '{{ entite.description }} {{ entite.description2 }}' );

                                        {% endif %}

                                        {% endfor %}
                                    },


                                    onClick: function( value ) {

                                        console.log(value)


                                        var newElement = CKEDITOR.dom.element.createFromHtml("<span>" + value + "</span>", editor.document);

                                        editor.insertElement(newElement);


                                    }

                                });

                            CKEDITOR.dtd.$removeEmpty.span = 0;

                            CKEDITOR.editorConfig = function( config ) {
                                config.extraAllowedContent = 'span(*)';
                            }

                        }
                    });

            });
        </script>

    {% endblock %}
